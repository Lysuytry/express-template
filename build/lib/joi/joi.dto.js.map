{"version":3,"sources":["../../../src/lib/joi/joi.dto.js"],"names":["Joi","objectId","Schema","data","object","keys","String","max","min","alpNum","required","temp","string","alphanum","Number","int","number","integer","Email","email","ObjectId"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEAA,cAAIC,QAAJ,GAAe,2BAASD,aAAT,CAAf;;AAEA,MAAME,SAASC,QAAQ;AACrB,SAAOH,cAAII,MAAJ,GAAaC,IAAb,CAAkBF,IAAlB,CAAP;AACD,CAFD;;AAIA,MAAMG,SAAS,CAAC,EAAEC,GAAF,EAAOC,GAAP,EAAYC,MAAZ,EAAoBC,QAApB,EAAD,KAAoC;AACjD,MAAIC,OAAOX,cAAIY,MAAJ,EAAX;AACA,MAAIH,MAAJ,EAAYE,KAAKE,QAAL;AACZ,MAAIN,GAAJ,EAASI,KAAKJ,GAAL,CAASA,GAAT;AACT,MAAIC,GAAJ,EAASG,KAAKH,GAAL,CAASA,GAAT;AACT,MAAIE,QAAJ,EAAcC,KAAKD,QAAL;AACd,SAAOC,IAAP;AACD,CAPD;;AASA,MAAMG,SAAS,CAAC,EAAEP,GAAF,EAAOC,GAAP,EAAYO,GAAZ,EAAiBL,QAAjB,EAAD,KAAiC;AAC9C,MAAIC,OAAOX,cAAIgB,MAAJ,EAAX;AACA,MAAID,GAAJ,EAASJ,KAAKM,OAAL;AACT,MAAIV,GAAJ,EAASI,KAAKJ,GAAL,CAASA,GAAT;AACT,MAAIC,GAAJ,EAASG,KAAKH,GAAL,CAASA,GAAT;AACT,MAAIE,QAAJ,EAAcC,KAAKD,QAAL;AACd,SAAOC,IAAP;AACD,CAPD;;AASA,MAAMO,QAAQ,CAAC,EAAER,QAAF,EAAD,KAAkB;AAC9B,MAAIC,OAAOX,cAAIY,MAAJ,GAAaO,KAAb,EAAX;AACA,MAAIT,QAAJ,EAAcC,KAAKD,QAAL;AACd,SAAOC,IAAP;AACD,CAJD;;AAMA,MAAMS,WAAW,CAAC,EAAEV,QAAF,EAAD,KAAkB;AACjC,MAAIC,OAAOX,cAAIC,QAAJ,EAAX;AACA,MAAIS,QAAJ,EAAcC,KAAKD,QAAL;AACd,SAAOC,IAAP;AACD,CAJD;;QAMST,M,GAAAA,M;QAAQI,M,GAAAA,M;QAAQQ,M,GAAAA,M;QAAQI,K,GAAAA,K;QAAOE,Q,GAAAA,Q","file":"joi.dto.js","sourcesContent":["import Joi from 'joi';\nimport objectid from 'joi-objectid';\n\nJoi.objectId = objectid(Joi);\n\nconst Schema = data => {\n  return Joi.object().keys(data);\n};\n\nconst String = ({ max, min, alpNum, required }) => {\n  let temp = Joi.string();\n  if (alpNum) temp.alphanum();\n  if (max) temp.max(max);\n  if (min) temp.min(min);\n  if (required) temp.required();\n  return temp;\n};\n\nconst Number = ({ max, min, int, required }) => {\n  let temp = Joi.number();\n  if (int) temp.integer();\n  if (max) temp.max(max);\n  if (min) temp.min(min);\n  if (required) temp.required();\n  return temp;\n};\n\nconst Email = ({ required }) => {\n  let temp = Joi.string().email();\n  if (required) temp.required();\n  return temp;\n};\n\nconst ObjectId = ({ required }) => {\n  let temp = Joi.objectId();\n  if (required) temp.required();\n  return temp;\n};\n\nexport { Schema, String, Number, Email, ObjectId };\n"]}