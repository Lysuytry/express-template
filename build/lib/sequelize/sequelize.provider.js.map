{"version":3,"sources":["../../../src/lib/sequelize/sequelize.provider.js"],"names":["sequelizeProvider","DBNAME","DBUSER","DBPASS","DBHOST","DB","config","getSequelizeConfig","sequelize","Sequelize","host","dialect","sync","error","console","Op"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,oBAAoB,MAAM;AAC9B,MAAI;AACF,UAAM,EAAEC,MAAF,EAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,EAAlC,KAAyCC,iBAAOC,kBAAP,EAA/C;AACA,UAAMC,YAAY,IAAIC,mBAAJ,CAAcR,MAAd,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsC,EAAEO,MAAMN,MAAR,EAAgBO,SAASN,EAAzB,EAAtC,CAAlB;AACAG,cAAUI,IAAV;AACA,WAAOJ,SAAP;AACD,GALD,CAKE,OAAOK,KAAP,EAAc;AACdC,YAAQD,KAAR,CAAcA,KAAd;AACD;AACF,CATD;;AAWA,MAAME,KAAKN,oBAAUM,EAArB;AACA,MAAMP,YAAYR,mBAAlB;;QAESS,S,GAAAA,mB;QAAWD,S,GAAAA,S;QAAWO,E,GAAAA,E","file":"sequelize.provider.js","sourcesContent":["import Sequelize from 'sequelize';\nimport config from '../config';\n\nconst sequelizeProvider = () => {\n  try {\n    const { DBNAME, DBUSER, DBPASS, DBHOST, DB } = config.getSequelizeConfig();\n    const sequelize = new Sequelize(DBNAME, DBUSER, DBPASS, { host: DBHOST, dialect: DB });\n    sequelize.sync();\n    return sequelize;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst Op = Sequelize.Op;\nconst sequelize = sequelizeProvider();\n\nexport { Sequelize, sequelize, Op };\n"]}