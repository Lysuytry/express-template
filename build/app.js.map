{"version":3,"sources":["../src/app.js"],"names":["app","express","use","static","json","limit","parser","urlencoded","extended","req","res","next","header","get","doc","PDFDocument","filename","setHeader","content","y","text","pipe","end"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,MAAMA,MAAM,IAAIC,iBAAJ,EAAZ;;AAEA;;AAEA;AACAD,IAAIE,GAAJ,CAAQ,GAAR,EAAaD,kBAAQE,MAAR,CAAe,QAAf,CAAb;AACAH,IAAIE,GAAJ,CAAQD,kBAAQG,IAAR,CAAa,EAAEC,OAAO,KAAT,EAAb,CAAR;AACAL,IAAIE,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAF,IAAIE,GAAJ,CAAQI,qBAAOC,UAAP,CAAkB,EAAEC,UAAU,IAAZ,EAAlB,CAAR;AACAR,IAAIE,GAAJ,CAAQI,qBAAOF,IAAP,EAAR;AACA;AACAJ,IAAIE,GAAJ,CAAQ,UAASO,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACD,CAJD;AAKA;;AAEAX,IAAIa,GAAJ,CAAQ,GAAR,EAAa,CAACJ,GAAD,EAAMC,GAAN,KAAc;AACzB,QAAMI,MAAM,IAAIC,gBAAJ,EAAZ;AACA;AACA;AACA,QAAMC,WAAW,aAAjB;AACA;AACA;AACAN,MAAIO,SAAJ,CAAc,qBAAd,EAAqC,2BAA2BD,QAA3B,GAAsC,GAA3E;AACAN,MAAIO,SAAJ,CAAc,cAAd,EAA8B,iBAA9B;AACA,QAAMC,UAAU,kBAAhB;AACAJ,MAAIK,CAAJ,GAAQ,GAAR;AACAL,MAAIM,IAAJ,CAASF,OAAT,EAAkB,EAAlB,EAAsB,EAAtB;AACAJ,MAAIO,IAAJ,CAASX,GAAT;AACAI,MAAIQ,GAAJ;AACD,CAdD;;kBAgBetB,G","file":"app.js","sourcesContent":["import parser from 'body-parser';\nimport express from 'express';\nimport logger from 'morgan';\nimport PDFDocument from 'pdfkit';\nconst app = new express();\n\n// mongooseConfig();\n\n// ======== Configuration Express ========================\napp.use('/', express.static('public'));\napp.use(express.json({ limit: '5mb' }));\napp.use(logger('dev'));\napp.use(parser.urlencoded({ extended: true }));\napp.use(parser.json());\n// combined\napp.use(function(req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n  next();\n});\n// =======================================================\n\napp.get('/', (req, res) => {\n  const doc = new PDFDocument();\n  // Stripping special characters\n  // const filename = // encodeURIComponent(filename) + '.pdf';\n  const filename = 'example.pdf';\n  // Setting response to 'attachment' (download).\n  // If you use 'inline' here it will automatically open the PDF\n  res.setHeader('Content-disposition', 'attachment; filename=\"' + filename + '\"');\n  res.setHeader('Content-type', 'application/pdf');\n  const content = 'req.body.content';\n  doc.y = 300;\n  doc.text(content, 50, 50);\n  doc.pipe(res);\n  doc.end();\n});\n\nexport default app;\n"]}